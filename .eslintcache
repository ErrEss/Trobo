[{"C:\\Users\\sharv\\Desktop\\anti-social\\monsterlessonsacademy\\src\\comments\\Comment.js":"1","C:\\Users\\sharv\\Desktop\\anti-social\\monsterlessonsacademy\\src\\comments\\Comments.js":"2","C:\\Users\\sharv\\Desktop\\anti-social\\monsterlessonsacademy\\src\\comments\\CommentForm.js":"3","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\NavBar.js":"4","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\Comment.js":"5","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\Comments.js":"6","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\CommentForm.js":"7","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\api.js":"8","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\Trobo.js":"9","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\App.js":"10","C:\\Users\\sharv\\Desktop\\Trobo\\src\\NavBar.js":"11","C:\\Users\\sharv\\Desktop\\Trobo\\src\\comments\\Comment.js":"12","C:\\Users\\sharv\\Desktop\\Trobo\\src\\comments\\Trobo.js":"13","C:\\Users\\sharv\\Desktop\\Trobo\\src\\comments\\Comments.js":"14","C:\\Users\\sharv\\Desktop\\Trobo\\src\\App.js":"15","C:\\Users\\sharv\\Desktop\\Trobo\\src\\api.js":"16"},{"size":3367,"mtime":1646191235256,"results":"17","hashOfConfig":"18"},{"size":2764,"mtime":1646450069193,"results":"19","hashOfConfig":"18"},{"size":971,"mtime":1646191235257,"results":"20","hashOfConfig":"18"},{"size":257,"mtime":1646468205420,"results":"21","hashOfConfig":"22"},{"size":3795,"mtime":1646525108689,"results":"23","hashOfConfig":"22"},{"size":2763,"mtime":1646471558957,"results":"24","hashOfConfig":"22"},{"size":1044,"mtime":1646469018527,"results":"25","hashOfConfig":"22"},{"size":451,"mtime":1646471499036,"results":"26","hashOfConfig":"22"},{"size":569,"mtime":1646525716840,"results":"27","hashOfConfig":"22"},{"size":295,"mtime":1646468242334,"results":"28","hashOfConfig":"22"},{"size":257,"mtime":1646468205420,"results":"29","hashOfConfig":"30"},{"size":4265,"mtime":1646540278310,"results":"31","hashOfConfig":"30"},{"size":706,"mtime":1646530799640,"results":"32","hashOfConfig":"30"},{"size":3693,"mtime":1646540069771,"results":"33","hashOfConfig":"30"},{"size":299,"mtime":1646532263101,"results":"34","hashOfConfig":"30"},{"size":451,"mtime":1646471499036,"results":"35","hashOfConfig":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17eqflz",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tzyfbd",{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"gb5x9i",{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sharv\\Desktop\\anti-social\\monsterlessonsacademy\\src\\comments\\Comment.js",["70"],"C:\\Users\\sharv\\Desktop\\anti-social\\monsterlessonsacademy\\src\\comments\\Comments.js",[],"C:\\Users\\sharv\\Desktop\\anti-social\\monsterlessonsacademy\\src\\comments\\CommentForm.js",[],"C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\NavBar.js",[],"C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\Comment.js",["71","72"],"import CommentForm from \"./CommentForm\";\r\nimport Trobo from \"./Trobo\";\r\n\r\nconst Comment = ({\r\n  comment,\r\n  replies,\r\n  setActiveComment,\r\n  activeComment,\r\n  updateComment,\r\n  deleteComment,\r\n  addComment,\r\n  trollComment,\r\n  parentId = null,\r\n  currentUserId,\r\n}) => {\r\n  const isEditing =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"editing\";\r\n  const isReplying =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"replying\";\r\n\r\n  const isTrolling =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"trolling\";\r\n  \r\n  const canCounterTroll = true;\r\n  const fiveMinutes = 300000;\r\n  const timePassed = new Date() - new Date(comment.createdAt) > fiveMinutes;\r\n  const canDelete =\r\n    currentUserId === comment.userId && replies.length === 0 && !timePassed;\r\n  const canReply = Boolean(currentUserId);\r\n  const canEdit = currentUserId === comment.userId && !timePassed;\r\n  const replyId = parentId ? parentId : comment.id;\r\n  const createdAt = new Date(comment.createdAt).toLocaleDateString();\r\n  return (\r\n    <div key={comment.id} className=\"comment\">\r\n      <div className=\"comment-image-container\">\r\n        <img src=\"/user-icon.png\" />\r\n      </div>\r\n      <div className=\"comment-right-part\">\r\n        <div className=\"comment-content\">\r\n          <div className=\"comment-author\">{comment.username}  <span className=\"created\">{createdAt}</span></div>\r\n          \r\n        </div>\r\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\r\n        {isEditing && (\r\n          <CommentForm\r\n            submitLabel=\"Update\"\r\n            hasCancelButton\r\n            initialText={comment.body}\r\n            handleSubmit={(text) => updateComment(text, comment.id)}\r\n            handleCancel={() => {\r\n              setActiveComment(null);\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"comment-actions\">\r\n          {canReply && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() =>\r\n                setActiveComment({ id: comment.id, type: \"replying\" })\r\n              }\r\n            >\r\n              Reply\r\n            </div>\r\n          )}\r\n          {canEdit && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() =>\r\n                setActiveComment({ id: comment.id, type: \"editing\" })\r\n              }\r\n            >\r\n              Edit\r\n            </div>\r\n          )}\r\n          {canDelete && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() => deleteComment(comment.id)}\r\n            >\r\n              Delete\r\n            </div>\r\n          )}\r\n         \r\n          {canCounterTroll && (\r\n               <Trobo trollComment={trollComment}/>\r\n          )}\r\n\r\n          \r\n        </div>\r\n        \r\n        \r\n        {isReplying && (\r\n          <CommentForm\r\n            submitLabel=\"Reply\"\r\n            handleSubmit={(text) => addComment(text, replyId)}\r\n          />\r\n        )}\r\n\r\n\r\n        {replies.length > 0 && (\r\n          <div className=\"replies\">\r\n            {replies.map((reply) => (\r\n              <Comment\r\n                comment={reply}\r\n                key={reply.id}\r\n                setActiveComment={setActiveComment}\r\n                activeComment={activeComment}\r\n                updateComment={updateComment}\r\n                deleteComment={deleteComment}\r\n                addComment={addComment}\r\n                trollComment={trollComment}\r\n                parentId={comment.id}\r\n                replies={[]}\r\n                currentUserId={currentUserId}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\Comments.js",[],"C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\CommentForm.js",[],"C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\api.js",[],"C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\comments\\Trobo.js",[],"C:\\Users\\sharv\\Desktop\\anti-social\\FinalPrj\\src\\App.js",[],"C:\\Users\\sharv\\Desktop\\Trobo\\src\\NavBar.js",[],"C:\\Users\\sharv\\Desktop\\Trobo\\src\\comments\\Comment.js",["73","74"],"import CommentForm from \"./CommentForm\";\r\nimport Trobo from \"./Trobo\";\r\n\r\nconst Comment = ({\r\n  comment,\r\n  replies,\r\n  setActiveComment,\r\n  activeComment,\r\n  updateComment,\r\n  deleteComment,\r\n  addComment,\r\n  trollComment,\r\n  trollResponse,\r\n  parentId = null,\r\n  currentUserId,\r\n}) => {\r\n  const isEditing =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"editing\";\r\n  \r\n    const isReplying =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"replying\";\r\n\r\n  const isTrolling =\r\n    activeComment &&\r\n    activeComment.id === comment.id &&\r\n    activeComment.type === \"trolling\";\r\n  \r\n  const canCounterTroll = true;\r\n  const fiveMinutes = 300000;\r\n  const timePassed = new Date() - new Date(comment.createdAt) > fiveMinutes;\r\n  const canDelete =\r\n    currentUserId === comment.userId && replies.length === 0 && !timePassed;\r\n  const canReply = Boolean(currentUserId);\r\n  const canEdit = currentUserId === comment.userId && !timePassed;\r\n  const replyId = parentId ? parentId : comment.id;\r\n  const createdAt = new Date(comment.createdAt).toLocaleDateString();\r\n  return (\r\n    <div key={comment.id} className=\"comment\">\r\n      <div className=\"comment-image-container\">\r\n        <img src=\"/user-icon.png\" />\r\n      </div>\r\n      <div className=\"comment-right-part\">\r\n        <div className=\"comment-content\">\r\n          <div className=\"comment-author\">{comment.username}  <span className=\"created\">{createdAt}</span></div>\r\n          \r\n        </div>\r\n        {!isEditing && <div className=\"comment-text\">{comment.body}</div>}\r\n        {isEditing && (\r\n          <CommentForm\r\n            submitLabel=\"Update\"\r\n            hasCancelButton\r\n            initialText={comment.body}\r\n            handleSubmit={(text) => updateComment(text, comment.id)}\r\n            handleCancel={() => {\r\n              setActiveComment(null);\r\n            }}\r\n          />\r\n        )}\r\n        <div className=\"comment-actions\">\r\n          {canReply && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() =>\r\n                setActiveComment({ id: comment.id, type: \"replying\" })\r\n              }\r\n            >\r\n              Reply\r\n            </div>\r\n          )}\r\n          {canEdit && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() =>\r\n                setActiveComment({ id: comment.id, type: \"editing\" })\r\n              }\r\n            >\r\n              Edit\r\n            </div>\r\n          )}\r\n          {canDelete && (\r\n            <div\r\n              className=\"comment-action\"\r\n              onClick={() => deleteComment(comment.id)}\r\n            >\r\n              Delete\r\n            </div>\r\n          )}\r\n         \r\n          {canCounterTroll && (\r\n             <div\r\n             className=\"comment-action\"\r\n             onClick={() =>\r\n               setActiveComment({ id: comment.id, type: \"trolling\" })\r\n             }\r\n           >\r\n               <Trobo trollComment={trollComment} comment={comment}/>\r\n           </div>\r\n          )}\r\n\r\n          \r\n        </div>\r\n        \r\n        {trollResponse && (\r\n          <CommentForm\r\n            submitLabel=\"Reply\"\r\n            handleSubmit={(text) => addComment(text, replyId)}\r\n            initialText={trollResponse}\r\n          />\r\n        )}\r\n\r\n        \r\n        {isReplying && (\r\n          <CommentForm\r\n            submitLabel=\"Reply\"\r\n            handleSubmit={(text) => addComment(text, replyId)}\r\n          />\r\n        )}\r\n\r\n\r\n        {replies.length > 0 && (\r\n          <div className=\"replies\">\r\n            {replies.map((reply) => (\r\n              <Comment\r\n                comment={reply}\r\n                key={reply.id}\r\n                setActiveComment={setActiveComment}\r\n                activeComment={activeComment}\r\n                updateComment={updateComment}\r\n                deleteComment={deleteComment}\r\n                addComment={addComment}\r\n                trollComment={trollComment}\r\n                parentId={comment.id}\r\n                replies={[]}\r\n                currentUserId={currentUserId}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","C:\\Users\\sharv\\Desktop\\Trobo\\src\\comments\\Trobo.js",[],"C:\\Users\\sharv\\Desktop\\Trobo\\src\\comments\\Comments.js",[],"C:\\Users\\sharv\\Desktop\\Trobo\\src\\App.js",[],"C:\\Users\\sharv\\Desktop\\Trobo\\src\\api.js",[],{"ruleId":"75","severity":1,"message":"76","line":33,"column":9,"nodeType":"77","endLine":33,"endColumn":37},{"ruleId":"78","severity":1,"message":"79","line":25,"column":9,"nodeType":"80","messageId":"81","endLine":25,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":42,"column":9,"nodeType":"77","endLine":42,"endColumn":37},{"ruleId":"78","severity":1,"message":"79","line":27,"column":9,"nodeType":"80","messageId":"81","endLine":27,"endColumn":19},{"ruleId":"75","severity":1,"message":"76","line":44,"column":9,"nodeType":"77","endLine":44,"endColumn":37},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'isTrolling' is assigned a value but never used.","Identifier","unusedVar"]